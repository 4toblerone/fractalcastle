{"version":3,"sources":["Logo.js","sidebar/Sidebar.js","content/Gallery.js","content/Content.js","App.js","serviceWorker.js","index.js"],"names":["Logo","className","ProjectNav","location","useLocation","map","p","i","projectLink","selected","pathname","key","to","Contact","useState","contactVisible","setContactVisible","onClick","href","target","rel","fontSize","Sidebar","Desktop","children","useMediaQuery","minWidth","Mobile","maxWidth","ProjectMap","Mirage","SlowSide","ArrowKeys","Gallery","state","index","project","showAbout","setIndex","setState","onNext","props","photos","length","onPreviouse","photosLength","toggleAbout","document","addEventListener","this","onKey","bind","removeEventListener","event","console","log","keyCode","photo","src","alt","currentImg","about","renderNavigation","renderPhoto","text","showUnder","duration","ArrowUpward","nextProps","prevState","React","PureComponent","Content","exact","path","render","params","match","App","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22655e22.chunk.js","sourcesContent":["import React from 'react';\nimport './Logo.css';\n\nexport function Logo() {\n    return (\n        <div className='logo'>\n            <span>fractal</span>\n            <span>castle</span>\n        </div>\n    )\n}\n","import React, { useState, Fragment } from 'react';\nimport './Sidebar.css';\nimport { Logo } from '../Logo'\nimport {\n    Link,\n    useLocation\n} from \"react-router-dom\";\n\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\nfunction ProjectNav() {\n    const projects = ['mirage', 'slow-side'];\n    const location = useLocation();\n\n    return (\n       <Fragment>\n           {/*<div className=\"about\">*/}\n           {/*    <Link to={'/'}>About</Link>*/}\n           {/*</div>*/}\n           <div className=\"project-navigation\">\n               {projects.map((p, i) => {\n                   const projectLink = `/${p}`;\n                   const selected = projectLink === location.pathname;\n\n                   return (\n                       <div key={i} className={`project ${selected ? 'selected' : ''}`}>\n                           <Link to={projectLink}>{p}</Link>\n                       </div>\n                   );\n               })}\n           </div>\n       </Fragment>\n    )\n}\n\nfunction Contact() {\n    const [contactVisible, setContactVisible] = useState(false);\n\n    return (\n        <div className=\"contact\">\n            <span className=\"contact-header\" onClick={() => setContactVisible(!contactVisible)}>Contact</span>\n            {contactVisible && (\n                <div className=\"social\">\n                    <a href=\"https://twitter.com/4evertoblerone\" target='_blank' rel='noopener noreferrer'><TwitterIcon fontSize=\"small\" /></a>\n                    <a href=\"https://www.instagram.com/4evertoblerone\" target='_blank' rel='noopener noreferrer'><InstagramIcon fontSize=\"small\" /></a>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport function Sidebar() {\n    return (\n        <div className=\"sidebar\">\n            <Logo />\n            <ProjectNav />\n            <Contact />\n        </div>\n    );\n}\n","import React, { Fragment } from 'react';\nimport { useMediaQuery } from 'react-responsive'\nimport ScrollToTop from 'react-scroll-up';\nimport ReadMoreReact from 'read-more-react';\nimport { ArrowUpward } from '@material-ui/icons';\nimport Mirage from '../projects/mirage';\nimport SlowSide from '../projects/slow-side';\n\n\nconst Desktop = ({ children }) => {\n    const isDesktop = useMediaQuery({ minWidth: 481 });\n    return isDesktop ? children : null\n};\n\nconst Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 480 });\n    return isMobile ? children : null\n};\n\nconst ProjectMap = {\n    'mirage': Mirage,\n    'slow-side': SlowSide,\n};\n\nconst ArrowKeys = {\n    LEFT: 37,\n    RIGHT: 39,\n};\n\n/**\n * Props.Project - Current active project ro show\n *\n * @param props - { project: string }\n * @returns {*}\n * @constructor\n */\nexport class Gallery extends React.PureComponent {\n    state = {\n        index: 0,\n        project: null,\n        showAbout: false,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const project = prevState.project;\n        let index = prevState.index;\n\n        if (project !== nextProps.project) {\n            index = 0;\n        }\n\n        return {\n            index,\n            project: nextProps.project,\n        }\n    }\n\n    setIndex = (index) => {\n        if (this.state.showAbout) {\n            return;\n        }\n\n        this.setState({\n            index\n        });\n    };\n\n    onNext = () => {\n        let index = this.state.index;\n        const currentProject = ProjectMap[this.props.project];\n        const photosLength = currentProject.photos.length;\n\n        if (index === photosLength - 1) {\n            index = 0;\n        } else {\n            index++;\n        }\n\n        this.setIndex(index);\n    };\n\n    onPreviouse = () => {\n        let index = this.state.index;\n        const currentProject = ProjectMap[this.props.project];\n        const photosLength = currentProject.photos.length;\n\n        if (index === 0) {\n            index = photosLength - 1;\n        } else {\n            index--;\n        }\n\n        this.setIndex(index);\n    };\n\n    toggleAbout = () => {\n      this.setState((state) => {\n          return {\n              showAbout: !state.showAbout,\n          }\n      })\n    };\n\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this.onKey.bind(this), false);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener(\"keydown\", this.onKey.bind(this), false);\n    }\n\n    onKey(event) {\n        console.log(event);\n        if (event.keyCode === ArrowKeys.LEFT) {\n            return this.onPreviouse();\n        }\n\n        if (event.keyCode === ArrowKeys.RIGHT) {\n            return this.onNext();\n        }\n    }\n\n    renderPhoto(photo) {\n        return (\n            <div className={'photo'} key={photo} >\n                <img src={photo} alt={photo} />\n            </div>\n        );\n    }\n\n    renderNavigation() {\n        return (\n            <div className=\"navigation\">\n                <div className={'read-more-info'} onClick={this.toggleAbout} >Project Info</div>\n                <span onClick={this.onPreviouse}> &#60; <span>prev</span> </span><span onClick={this.onNext}> <span>next</span> ></span>\n            </div>\n        );\n    }\n\n    render() {\n        const project = ProjectMap[this.props.project];\n        const currentImg = this.state.index;\n\n        if (!project) {\n            return (\n                <h1>Project you are looking for doesnt exist yet :)</h1>\n            )\n        }\n\n        const photo = project.photos[currentImg];\n\n        return (\n            <div className=\"gallery\">\n                <Desktop>\n                    {this.state.showAbout ? (\n                        <Fragment>\n                            <div className=\"read-more-container\">\n                                {project.about}\n                                <div className=\"back-to-project\" onClick={this.toggleAbout}>\n                                    Back to Project\n                                </div>\n                            </div>\n                            {this.renderNavigation()}\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                            {this.renderPhoto(photo, null, false)}\n                            {this.renderNavigation()}\n                        </Fragment>\n                    )}\n                </Desktop>\n               <Mobile>\n                   <div className={'description'}>\n                       <ReadMoreReact\n                        text={project.about}\n                       />\n                   </div>\n                   {project.photos.map((p) => {\n                       return this.renderPhoto(p);\n                   })}\n                   <ScrollToTop showUnder={160} duration={1000}>\n                       <div className={'scroll-to-top'}><ArrowUpward /></div>\n                   </ScrollToTop>\n               </Mobile>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Gallery } from './Gallery';\nimport './Content.css';\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\n// function AboutMe() {\n//     return (\n//         <div className=\"about-me\">\n//             Hello, i am Sasa Trifunovic, software engineer turned photo artist.\n//         </div>\n//     );\n// }\n\nexport function Content() {\n    return (\n        <div className=\"content\">\n            <Switch>\n                <Route exact path=\"/\">\n                    {/*<AboutMe />*/}\n                    <Redirect to=\"/mirage\" />\n                </Route>\n                <Route path=\"/:project\" render={({ match: { params }}) => {\n                    return (\n                        <Gallery project={params.project}/>\n                    );\n                }} />\n            </Switch>\n        </div>\n    );\n}\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Sidebar } from './sidebar/Sidebar';\nimport { Content } from './content/Content';\nimport './App.css';\nimport './Responsiv.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n          <Sidebar />\n          <Content />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}